
version: "3"

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
  mongo_data:

services:

  web:
    build:
      context: .
      dockerfile: ./node/Dockerfile
    image: jblog-client_web
    container_name: 'jblog-client_web_container'
    environment:
      - NODE_ENV=production
    ports:
      - 8081:8081
    volumes:
      - ./dist:/home/jblog-client/dist
    restart: always
    #    depends_on:
    #      - mongo
    networks:
      - app-network

  nginx:
    user: root
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: jblog-client_nginx
    container_name: 'jblog-client_nginx_container'
    ports:
      -  80:80
      -  443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/cert:/etc/nginx/conf.d/cert
      - ./dist:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#    links:
#    - web:koaserver #给它取个别名，叫做koaserver
#    command: nginx
    restart: always
    depends_on:
      - web
    networks:
      - app-network

#  mongo:
#    build:
#      context: .
#      dockerfile: ./mongo/Dockerfile
#    ports:
#      - 27017:27017
#    volumes:
##      - mongo_data:/data/db
#    restart: always
#    networks:
#      - app-network


